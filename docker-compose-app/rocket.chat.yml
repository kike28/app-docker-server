version: '2'

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
    networks:
      - default
    environment:
#      - PORT=3000
#      - ROOT_URL=http://rocket.directo.ml:3000
#      - MONGO_URL=mongodb://mongo:27017/rocketchat
#      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
#       - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
      - PORT=3000
      - ROOT_URL=http://localhost:3000 # http://45.55.32.60:3000 # old value http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email

    depends_on:
      - mongo
    #ports:
      #- 3000:3000
    labels:
     #- "traefik.enable=true"
     #- "traefik.docker.network=traefik"
     # - "traefik.http.routers.rocket-secure.entrypoints=websecure"
     # - "traefik.http.routers.rocket-secure.rule=Host(`rocket.directo.ml`)"
     # - "traefik.http.services.rocket-websocket.loadbalancer.server.port=3000"
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.entrypoints=websecure"
      - "traefik.http.routers.rocketchat.rule=Host(`rocket.directo.ml`)"   # Hier eure URL eingeben #
      - "traefik.http.middlewares.rocketchat-https-redirect.redirectscheme.scheme=websecure"
      - "traefik.http.routers.rocketchat.middlewares=rocketchat-https-redirect"
      - "traefik.http.routers.rocketchat-secure.entrypoints=websecure"
      - "traefik.http.routers.rocketchat-secure.rule=Host(`rocket.directo.ml`)"    # Hier eure URL eingeben #
      - "traefik.http.routers.rocketchat-secure.tls=true"
      - "traefik.http.routers.rocketchat-secure.tls.certresolver=web"
      - "traefik.http.routers.rocketchat-secure.service=rocketchat"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
      #- "traefik.http.routers.rocketchat-secure.middlewares=secHeaders@file"
  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - data:/data/db
    networks:
      - default
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    networks:
      - default
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    restart: unless-stopped
    networks:
      - default
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    labels:
      - "traefik.enable=false"
    volumes:
      - scripts:/home/hubot/scripts
  # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    #ports:
      #- 3001:8080
volumes:
  scripts:
  data:
  uploads:
networks:
  default:
    external: true
    name: core_proxy